name: Release build
on:
  release:
    types:
      - published

jobs:

  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - platform: ubuntu-latest
            goos: linux
            arch: amd64
          - platform: macos-latest
            goos: darwin
            arch: amd64
          - platform: windows-latest
            goos: windows
            arch: amd64
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Run pkg
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
      run: make ${{ matrix.goos }}_pkg
    - name: Run dist
      run: make dist
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:  ${{github.event.release.upload_url}}
        asset_path: ./dist/github-actions-test_${{github.event.release.tag_name}}_${{ matrix.goos }}_${{ matrix.arch }}.zip
        asset_name: github-actions-test_${{github.event.release.tag_name}}_${{ matrix.goos }}_${{ matrix.arch }}.zip
        asset_content_type: application/zip